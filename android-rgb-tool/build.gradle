apply plugin: 'com.android.application'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode 12
        versionName "1.4.4"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    if (project.hasProperty("RGBTool.signing.properties")
            && new File(project.property("RGBTool.signing.properties")).exists()) {

        Properties props = new Properties()
        props.load(new FileInputStream(file(project.property("RGBTool.signing.properties"))))

        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keyAlias']
                keyPassword props['keyPassword']
            }
        }

        buildTypes {
            release {
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
                signingConfig signingConfigs.release
            }
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    def appDependencies = globalConfiguration.appDependencies
    def appDebugDependencies = globalConfiguration.appDebugDependencies
    def appReleaseDependencies = globalConfiguration.appReleaseDependencies
    def appTestDependencies = globalConfiguration.appTestDependencies
    def appAndroidTestDependencies = globalConfiguration.appAndroidTestDependencies

    compile appDependencies.appCompat
    compile appDependencies.cardView
    compile appDependencies.recyclerView
    compile appDependencies.palette
    compile appDependencies.design
    compile appDependencies.customTabs
    compile appDependencies.percent
    compile appDependencies.photoView
    compile appDependencies.picasso
    compile appDependencies.butterKnife
    compile appDependencies.eventBus
    compile appDependencies.rxAndroid
    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    compile project(':model')

    // Memory leak detection
    debugCompile appDebugDependencies.leakCanary
    releaseCompile appReleaseDependencies.leakCanaryNoOp

    // Unit testing dependencies
    testCompile appTestDependencies.jUnit

    // Testing-only dependencies
    androidTestCompile appAndroidTestDependencies.espressoCore
    androidTestCompile appAndroidTestDependencies.testRunner
    androidTestCompile appAndroidTestDependencies.supportAnnotation
}
